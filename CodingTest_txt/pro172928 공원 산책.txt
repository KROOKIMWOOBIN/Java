import java.util.*;

class Solution {
    public int[] solution(String[] park, String[] routes) {
        int[] answer = new int[2];
        int x = -1; // 시작 위치 X 축
        int y = -1; // 시작 위치 Y 축
        int height = park.length; // 공원 높이
        int weight = park[0].length(); // 공원 넓이
        // 시작 위치 찾기
        for(int i = 0; i < park.length; i++){
            if(park[i].indexOf('S') != -1){
                x = park[i].indexOf('S');
                y = i;
                break;
            }
        }
        // 명령 순회
        for(int i = 0; i < routes.length; i++){
            String[] temp = routes[i].split(" ");
            String vector = temp[0]; // 방향
            int distance = Integer.parseInt(temp[1]); // 거리
            int currX = x;
            int currY = y;
            // 동
            if(vector.equals("E")){
                boolean flag = true;
                for(int j = 0; j < distance; j++){
                    currX++;
                    if(currX >= weight){ // 맵 탈출 체크
                        flag = false;
                        break;
                    }
                    else if(park[currY].charAt(currX) == 'X'){ // 장애물 체크
                        flag = false;
                        break;
                    }
                }
                if(flag) x = currX;
            }
            // 서
            if(vector.equals("W")){
                boolean flag = true;
                for(int j = 0; j < distance; j++){
                    currX--;
                    if(currX < 0){ // 맵 탈출 체크
                        flag = false;
                        break;
                    }
                    else if(park[currY].charAt(currX) == 'X'){ // 장애물 체크
                        flag = false;
                        break;
                    }
                }
                if(flag) x = currX;
            }
            // 남
            if(vector.equals("S")){
                boolean flag = true;
                for(int j = 0; j < distance; j++){
                    currY++;
                    if(currY >= height){ // 맵 탈출 체크
                        flag = false;
                        break;
                    }
                    else if(park[currY].charAt(currX) == 'X'){ // 장애물 체크
                        flag = false;
                        break;
                    }
                }
                if(flag) y = currY;
            }
            // 북
            if(vector.equals("N")){
                boolean flag = true;
                for(int j = 0; j < distance; j++){
                    currY--;
                    if(currY < 0){ // 맵 탈출 체크
                        flag = false;
                        break;
                    }
                    else if(park[currY].charAt(currX) == 'X'){ // 장애물 체크
                        flag = false;
                        break;
                    }
                }
                if(flag) y = currY;
            }
        }
        answer[0] = y;
        answer[1] = x;
        return answer;
    }
}